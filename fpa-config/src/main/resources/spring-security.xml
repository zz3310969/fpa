<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:util="http://www.springframework.org/schema/util"
			 xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security/oauth2
		http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util
 		http://www.springframework.org/schema/util/spring-util.xsd">



	<http pattern="/token*" security="none" />
	<http pattern="/swagger/**" security="none" />
	<http pattern="/v2/api-docs*" security="none" />

	<http pattern="/fpa/pic/**" security="none" />
    <!--activiti-->
	<http pattern="/service/**" security="none" />
	<!--<http pattern="/workflow/**" security="none" />-->
	<!--<http pattern="/management/**" security="none" />-->
	<!--<http pattern="/user/**" security="none" />-->
	<http pattern="/editor-app/**" security="none" />
<!--
	<http pattern="/fpa/wechat/**" security="none" />
-->
	<http pattern="/druid/**" security="none" />

	<http pattern="/mainAction/login.action*" security="none" />

 	<http pattern="/userAction/goLogin.action*" security="none" />
 	<http pattern="/userAction/login.json*" security="none" /> 
	<http pattern="/tokenAction/accessToken.*" security="none" />
	<http pattern="/common/js/fort_awesome/font/*" request-matcher="ant" security="none" />
	<http pattern="/web_common/static/font/*" request-matcher="ant" security="none" />
	<http pattern="/web_common/bootstrap/fonts/*" request-matcher="ant" security="none" />
	<http pattern="/**/*.jsp" request-matcher="ant" security="none" />
	<http pattern="/**/*.css" request-matcher="ant" security="none" />
	<http pattern="/**/*.js" request-matcher="ant" security="none" />
	<http pattern="/**/*.html" request-matcher="ant" security="none" />
	<http pattern=".+[.](ico$|png$|jpg$|gif$|PNG$|JPG$|GIF$|xml$|xls$)" request-matcher="regex" security="none" />
	<http pattern="/advisory/oauth/check_token" security="none" />
	<http pattern="/advisory/user/*" security="none" />



	<!-- 权限名称必须以 ROLE_ 开头 -->
	<http auto-config="true" use-expressions="true" pattern="/**">
		<intercept-url pattern="/oauth/*" access="permitAll()" />

		<custom-filter ref="oAuth2AuthenticationProcessingFilter"
					   before="CAS_FILTER"  />

		<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />

		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		<logout logout-success-url="/index.jsp" delete-cookies="JSESSIONID" />
		<form-login login-page="/userAction/goLogin.action"
			authentication-failure-handler-ref="authenticationFailureHandler"
			authentication-success-handler-ref="authenticationSuccessHandler" />
		<csrf disabled="true"/>
		<remember-me />
	</http>





	<beans:bean id="authenticationFailureHandler"
		class="org.roof.web.user.service.api.ChainAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/mainAction/login.action" />
		<beans:property name="useForward" value="true" />
		<beans:property name="exceptionMappings">
			<beans:map>
				<beans:entry
					key="org.springframework.security.authentication.BadCredentialsException"
					value="/error" />
				<beans:entry
					key="org.springframework.security.core.userdetails.UsernameNotFoundException"
					value="/errorcode" />
			</beans:map>
		</beans:property>
		<beans:property name="redirectStrategy">
			<beans:bean class="org.roof.web.user.service.api.JsonRedirectStrategy" />
		</beans:property>
		<beans:property name="authenticationFailureHandlers">
			<beans:list>
				<beans:bean
					class="org.roof.web.user.service.api.SaveLogAuthenticationFailureHandler">
					<beans:property name="loginLogService" ref="loginLogService" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="authenticationSuccessHandler"
		class="org.roof.web.user.service.api.ChainAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/mainAction/selin.action" />
		<beans:property name="redirectStrategy">
			<beans:bean class="org.roof.web.user.service.api.JsonRedirectStrategy" />
		</beans:property>
		<beans:property name="authenticationSuccessHandlers">
			<beans:list>
				<beans:bean
					class="org.roof.web.user.service.api.SaveLogAuthenticationSuccessHandler">
					<beans:property name="loginLogService" ref="loginLogService" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	
	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg index="0">
			<util:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
			</util:list>
		</beans:constructor-arg>
	</beans:bean>
	<authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<authentication-provider ref="authenticationProvider"  />
		
	</authentication-manager>
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
	    <beans:property name="hideUserNotFoundExceptions" value="false" />  
	    <beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>  
  

	<beans:bean id="securityMetadataSource" scope="singleton"
		class="org.roof.web.user.service.api.RestfulSecurityMetadataSourceService">
		<beans:property name="resourceDao" ref="resourceDao" />
		<beans:property name="cacheManager" ref="cacheManager" />
		<beans:property name="cacheName"
			value="RestfulSecurityMetadataSourceService#loadResourceDefine" />
		<beans:property name="roleDao" ref="roleDao" />
	</beans:bean>



	<authorization-server client-details-service-ref="clientDetailsService" check-token-enabled="true"
						  xmlns="http://www.springframework.org/schema/security/oauth2" token-services-ref="tokenServices" >

		<authorization-code />
		<implicit />
		<refresh-token />
		<client-credentials />
		<password authentication-manager-ref="authenticationManager" />
	</authorization-server>

<!--
	<oauth2:resource-server id="resourceFilter" token-services-ref="tokenServices" />
-->

	<!--<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="authenticationManager"
		  entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">
		<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
		<anonymous enabled="false"/>
		<http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>

		<access-denied-handler ref="oauth2AccessDeniedHandler"/>
		<csrf disabled="true"/>
	</http>-->

	<beans:bean id="clientCredentialsTokenEndpointFilter"
				class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
	</beans:bean>

	<beans:bean id="oAuth2AuthenticationProcessingFilter"
				class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter">
		<beans:property name="authenticationManager" ref="oAuth2AuthenticationManager" />
	</beans:bean>

	<beans:bean id="oAuth2AuthenticationManager"
				class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager">
		<beans:property name="tokenServices" ref="tokenServices" />
	</beans:bean>

	<!--<beans:bean id="oauth2AuthenticationEntryPoint"
				class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

	<beans:bean id="oauth2AccessDeniedHandler"
				class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>


-->



</beans:beans>
