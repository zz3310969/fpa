<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roof.fpa.withdraw.dao">

	<sql id="columns">
		id, numb, account_id, amount, create_time, complete_time, state
	</sql>

	<sql id="columns_as">
		id as id , numb as numb , account_id as accountId , amount as amount , create_time as createTime , complete_time as completeTime , state as state 
	</sql>


	<sql id="vals">
		#{id}, #{numb}, #{accountId}, #{amount}, #{createTime}, #{completeTime}, #{state}
	</sql>
	<sql id="conds">
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="numb != null and numb != ''">
			and numb = #{numb}
		</if>
		<if test="accountId != null">
			and account_id = #{accountId}
		</if>
		<if test="amount != null">
			and amount = #{amount}
		</if>
		<if test="createTime != null">
			and create_time = #{createTime}
		</if>
		<if test="completeTime != null">
			and complete_time = #{completeTime}
		</if>
		<if test="state != null">
			and state = #{state}
		</if>
	</sql>

	<insert id="saveWithdraw" parameterType="com.roof.fpa.withdraw.entity.Withdraw" useGeneratedKeys="true" keyProperty="id">
		<selectKey keyProperty="id" resultType="Long" order="AFTER">
			select last_insert_id()
		</selectKey>
		insert into c_withdraw (<include refid="columns" />) 
		values (<include refid="vals" />)
	</insert>

	<delete id="deleteWithdraw">
		delete from c_withdraw
		where id=#{id} 
	</delete>

	<delete id="deleteByExampleWithdraw">
		delete from c_withdraw
		where 1=1
		<include refid="conds" />
	</delete>

	<update id="updateWithdraw">
		update c_withdraw
		<set>
			id=#{id}, 
			numb=#{numb}, 
			account_id=#{accountId}, 
			amount=#{amount}, 
			create_time=#{createTime}, 
			complete_time=#{completeTime}, 
			state=#{state}
		</set>
		where id=#{id} 
	</update>

	<update id="updateIgnoreNullWithdraw">
		update c_withdraw
		<set>
		<if test="id != null">
			id=#{id}, 
		</if>
		<if test="numb != null and numb != ''">
			numb=#{numb}, 
		</if>
		<if test="accountId != null">
			account_id=#{accountId}, 
		</if>
		<if test="amount != null">
			amount=#{amount}, 
		</if>
		<if test="createTime != null">
			create_time=#{createTime}, 
		</if>
		<if test="completeTime != null">
			complete_time=#{completeTime}, 
		</if>
		<if test="state != null">
			state=#{state}
		</if>
		</set>
		where id=#{id} 
	</update>

	<update id="updateByExampleWithdraw">
		update c_withdraw
		<set>
			<if test="id != null">
			id=#{id}, 
			</if>
			<if test="numb != null and numb != ''">
			numb=#{numb}, 
			</if>
			<if test="accountId != null">
			account_id=#{accountId}, 
			</if>
			<if test="amount != null">
			amount=#{amount}, 
			</if>
			<if test="createTime != null">
			create_time=#{createTime}, 
			</if>
			<if test="completeTime != null">
			complete_time=#{completeTime}, 
			</if>
			<if test="state != null">
			state=#{state}
			</if>
		</set>
		where 1=1
		<include refid="conds" />
	</update>
	
	<select id="loadWithdraw" resultType="com.roof.fpa.withdraw.entity.WithdrawVo">
		select 
		<include refid="columns_as"/>
		from c_withdraw
		where id=#{id} 
	</select>
	
	<select id="selectWithdraw" resultType="com.roof.fpa.withdraw.entity.WithdrawVo">
		select 
		<include refid="columns_as"/>
		from c_withdraw
		where 1=1
		<include refid="conds" />
	</select>
</mapper>