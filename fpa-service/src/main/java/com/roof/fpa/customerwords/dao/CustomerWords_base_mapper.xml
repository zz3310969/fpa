<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roof.fpa.customerwords.dao">

	<sql id="columns">
		id, name, wechat_id, customer_id, mobile, mail, words
	</sql>

	<sql id="columns_as">
		id as id , name as name , wechat_id as wechatId , customer_id as customerId , mobile as mobile , mail as mail , words as words 
	</sql>


	<sql id="vals">
		#{id}, #{name}, #{wechatId}, #{customerId}, #{mobile}, #{mail}, #{words}
	</sql>
	<sql id="conds">
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="name != null and name != ''">
			and name = #{name}
		</if>
		<if test="wechatId != null and wechatId != ''">
			and wechat_id = #{wechatId}
		</if>
		<if test="customerId != null">
			and customer_id = #{customerId}
		</if>
		<if test="mobile != null and mobile != ''">
			and mobile = #{mobile}
		</if>
		<if test="mail != null and mail != ''">
			and mail = #{mail}
		</if>
		<if test="words != null and words != ''">
			and words = #{words}
		</if>
	</sql>

	<insert id="saveCustomerWords" parameterType="com.roof.fpa.customerwords.entity.CustomerWords" useGeneratedKeys="true" keyProperty="id">
		<selectKey keyProperty="id" resultType="Long" order="AFTER">
			select last_insert_id()
		</selectKey>
		insert into c_customer_words (<include refid="columns" />) 
		values (<include refid="vals" />)
	</insert>

	<delete id="deleteCustomerWords">
		delete from c_customer_words
		where id=#{id} 
	</delete>

	<delete id="deleteByExampleCustomerWords">
		delete from c_customer_words
		where 1=1
		<include refid="conds" />
	</delete>

	<update id="updateCustomerWords">
		update c_customer_words
		<set>
			id=#{id}, 
			name=#{name}, 
			wechat_id=#{wechatId}, 
			customer_id=#{customerId}, 
			mobile=#{mobile}, 
			mail=#{mail}, 
			words=#{words}
		</set>
		where id=#{id} 
	</update>

	<update id="updateIgnoreNullCustomerWords">
		update c_customer_words
		<set>
		<if test="id != null">
			id=#{id}, 
		</if>
		<if test="name != null and name != ''">
			name=#{name}, 
		</if>
		<if test="wechatId != null and wechatId != ''">
			wechat_id=#{wechatId}, 
		</if>
		<if test="customerId != null">
			customer_id=#{customerId}, 
		</if>
		<if test="mobile != null and mobile != ''">
			mobile=#{mobile}, 
		</if>
		<if test="mail != null and mail != ''">
			mail=#{mail}, 
		</if>
		<if test="words != null and words != ''">
			words=#{words}
		</if>
		</set>
		where id=#{id} 
	</update>

	<update id="updateByExampleCustomerWords">
		update c_customer_words
		<set>
			<if test="id != null">
			id=#{id}, 
			</if>
			<if test="name != null and name != ''">
			name=#{name}, 
			</if>
			<if test="wechatId != null and wechatId != ''">
			wechat_id=#{wechatId}, 
			</if>
			<if test="customerId != null">
			customer_id=#{customerId}, 
			</if>
			<if test="mobile != null and mobile != ''">
			mobile=#{mobile}, 
			</if>
			<if test="mail != null and mail != ''">
			mail=#{mail}, 
			</if>
			<if test="words != null and words != ''">
			words=#{words}
			</if>
		</set>
		where 1=1
		<include refid="conds" />
	</update>
	
	<select id="loadCustomerWords" resultType="com.roof.fpa.customerwords.entity.CustomerWordsVo">
		select 
		<include refid="columns_as"/>
		from c_customer_words
		where id=#{id} 
	</select>
	
	<select id="selectCustomerWords" resultType="com.roof.fpa.customerwords.entity.CustomerWordsVo">
		select 
		<include refid="columns_as"/>
		from c_customer_words
		where 1=1
		<include refid="conds" />
	</select>
</mapper>