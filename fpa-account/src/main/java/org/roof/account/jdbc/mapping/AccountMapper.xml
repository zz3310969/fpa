<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.roof.account.jdbc.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="org.roof.account.entity.Account" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
    <result column="freeze_balance" property="freezeBalance" jdbcType="INTEGER" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="third_part_id" property="thirdPartId" jdbcType="VARCHAR" />
    <result column="account_non_locked" property="accountNonLocked" jdbcType="INTEGER" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_code, user_id, balance, freeze_balance, account_type, create_time,third_part_id, account_non_locked,enabled
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="org.roof.account.entity.Account" >
    insert into s_account (id, account_code, user_id, 
      balance, freeze_balance,
      account_type, create_time,third_part_id, account_non_locked,enabled)
    values (#{id,jdbcType=BIGINT}, #{accountCode,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{balance,jdbcType=INTEGER}, #{freezeBalance,jdbcType=INTEGER},
      #{accountType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{thirdPartId,jdbcType=VARCHAR},
            #{accountNonLocked,jdbcType=INTEGER}, #{enabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"  parameterType="org.roof.account.entity.Account" >
    insert into s_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountCode != null" >
        account_code,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freezeBalance != null" >
        freeze_balance,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="thirdPartId != null" >
        third_part_id,
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null" >
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="freezeBalance != null" >
        #{freezeBalance,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdPartId != null" >
        #{thirdPartId,jdbcType=VARCHAR},
      </if>
      <if test="accountNonLocked != null" >
        #{accountNonLocked,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.roof.account.entity.Account" >
    update s_account
    <set >
      <if test="accountCode != null" >
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="freezeBalance != null" >
        freeze_balance = #{freezeBalance,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdPartId != null" >
        third_part_id = #{thirdPartId,jdbcType=VARCHAR},
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked = #{accountNonLocked,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.roof.account.entity.Account" >
    update s_account
    set account_code = #{accountCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      balance = #{balance,jdbcType=INTEGER},
      freeze_balance = #{freezeBalance,jdbcType=INTEGER},
      account_type = #{accountType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      third_part_id = #{thirdPartId,jdbcType=VARCHAR},
      account_non_locked = #{accountNonLocked,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateBalance" parameterType="org.roof.account.entity.Account" >
    update s_account
    <set >
        balance = #{balance,jdbcType=INTEGER},
    </set>
    where id = #{id,jdbcType=BIGINT} AND balance = #{oldBalance,jdbcType=INTEGER}
  </update>


  <select id="selectByUserId" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from s_account
    <where>
      user_id = #{userId,jdbcType=BIGINT}
    </where>
  </select>

  <select id="selectByExampleObject" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from s_account
    <where>
      <if test="accountCode != null" >
        and account_code = #{accountCode,jdbcType=VARCHAR}
      </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="balance != null" >
        and balance = #{balance,jdbcType=INTEGER}
      </if>
      <if test="freezeBalance != null" >
        and freeze_balance = #{freezeBalance,jdbcType=INTEGER}
      </if>
      <if test="accountType != null" >
        and account_type = #{accountType,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null" >
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="thirdPartId != null" >
        and third_part_id = #{thirdPartId,jdbcType=VARCHAR}
      </if>
      <if test="accountNonLocked != null" >
        and account_non_locked = #{accountNonLocked,jdbcType=INTEGER}
      </if>
      <if test="enabled != null" >
        and enabled = #{enabled,jdbcType=INTEGER}
      </if>
    </where>
  </select>



</mapper>